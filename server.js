const express = require("express");
const cors = require("cors");
const app = express();
const PORT = process.env.PORT || 3000;

app.use(cors());

const usuario = {
  id: "user_001",
  nome: "Caio Rossi",
  saldo: 250.0,
  saldoPrevisto: 200.0,
};

const contas = [
  {
    id: "conta_001",
    nome: "√Ågua",
    valor: 85,
    vencimento: "2025-09-30",
    tipo: "essencial",
    status: "pendente",
  },
  {
    id: "conta_002",
    nome: "Aluguel",
    valor: 1200,
    vencimento: "2025-10-01",
    tipo: "essencial",
    status: "pendente",
  },
  {
    id: "conta_003",
    nome: "Internet",
    valor: 100,
    vencimento: "2025-10-03",
    tipo: "essencial",
    status: "pendente",
  },
  {
    id: "conta_004",
    nome: "Netflix",
    valor: 40,
    vencimento: "2025-09-29",
    tipo: "assinatura",
    status: "pendente",
  },
  {
    id: "conta_005",
    nome: "Academia",
    valor: 90,
    vencimento: "2025-10-02",
    tipo: "assinatura",
    status: "pendente",
  },
  {
    id: "conta_006",
    nome: "Restaurante",
    valor: 200,
    vencimento: "2025-09-27",
    tipo: "lazer",
    status: "pendente",
  },
  {
    id: "conta_007",
    nome: "Mercado",
    valor: 600,
    vencimento: "2025-09-25",
    tipo: "essencial",
    status: "pago",
  },
  {
    id: "conta_008",
    nome: "Cart√£o de Cr√©dito",
    valor: 900,
    vencimento: "2025-10-05",
    tipo: "essencial",
    status: "pendente",
  },
  {
    id: "conta_009",
    nome: "Transporte",
    valor: 250,
    vencimento: "2025-09-30",
    tipo: "essencial",
    status: "pendente",
  },
];

/*
No futuro, este backend pode evoluir para usar Machine Learning e agentes de IA para analisar automaticamente o saldo do usu√°rio e suas contas, gerando insights personalizados. 
- Cada conta e transa√ß√£o poderia ser armazenada em um banco de dados real (SQL ou NoSQL) em vez de dados mock, permitindo hist√≥rico e an√°lises em tempo real. 
- Modelos de ML poderiam identificar padr√µes de gastos, prever risco de saldo insuficiente e sugerir cortes ou ajustes autom√°ticos, considerando categorias, recorr√™ncia e comportamento do usu√°rio.
- Agentes de IA poderiam executar a√ß√µes autom√°ticas seguras, como enviar notifica√ß√µes, agendar pagamentos ou sugerir transfer√™ncias, mantendo privacidade e compliance com LGPD.
- As an√°lises atuais (saldo insuficiente, contas vencendo, sugest√µes de corte) seriam derivadas de infer√™ncias do modelo, em vez de regras fixas, tornando a assist√™ncia mais inteligente e adaptativa.
*/

app.get("/usuario", (req, res) => {
  res.json(usuario);
});

app.get("/contas", (req, res) => {
  res.json(contas);
});

app.get("/analise", (req, res) => {
  const insights = [];

  const contaEnergia = {
    nome: "Energia",
    valor: 120,
    vencimento: "2025-09-28",
  };
  if (contaEnergia.valor > usuario.saldo) {
    insights.push(
      `‚ö° Sua conta de energia vence amanh√£ e o saldo n√£o cobre totalmente. Que tal transferir agora?`
    );
  }

  insights.push(
    `‚ö†Ô∏è Fique de olho: h√° risco de d√©bito recusado na pr√≥xima cobran√ßa!`
  );

  const academia = contas.find((c) => c.nome === "Academia");
  if (academia) {
    insights.push(
      `üí° Que tal cortar a ${academia.nome} (R$ ${academia.valor}) este m√™s?`
    );
  }

  const netflix = contas.find((c) => c.nome === "Netflix");
  if (netflix) {
    if (usuario.saldo < netflix.valor) {
      insights.push(
        `üìâ Previs√£o de instabilidade: pode faltar R$ ${
          netflix.valor - usuario.saldo
        } para o pagamento da Netflix nesta semana.`
      );
    } else {
      insights.push(
        `üé¨ Sua assinatura da ${netflix.nome} de R$ ${netflix.valor} vence amanh√£, e o saldo est√° garantido. Aproveite tranquilo!`
      );
    }
  }

  const agua = contas.find((c) => c.nome === "√Ågua");
  if (agua) {
    insights.push(
      `üö∞ Sua conta de √°gua de R$ ${agua.valor} vence em 2 dias. Seu saldo j√° cobre, pode pagar sem preocupa√ß√µes!`
    );
  }

  const transporte = contas.find((c) => c.nome === "Transporte");
  if (transporte) {
    insights.push(
      `üöç Nos √∫ltimos 7 dias, voc√™ gastou R$ 60 a mais com transporte. Vale a pena ajustar essa rota?`
    );
  }

  const mercado = contas.find((c) => c.nome === "Mercado");
  if (mercado) {
    insights.push(
      `üõí O gasto no mercado subiu 15% este m√™s. Quer que eu sugira onde cortar para equilibrar?`
    );
  }

  const cartao = contas.find((c) => c.nome === "Cart√£o de Cr√©dito");
  if (cartao) {
    if (usuario.saldo < cartao.valor) {
      insights.push(
        `üí≥ Seu cart√£o vence em 5 dias com fatura de R$ ${cartao.valor}, mas o saldo atual √© R$ ${usuario.saldo}. Precisa de um plano?`
      );
    }
  }

  insights.push(
    `üéâ Boa not√≠cia: voc√™ pagou todas as contas da semana em dia! Continue assim! üí™`
  );

  res.json({
    mensagem: `Oi ${usuario.nome.split(" ")[0]}! Analisei suas contas üëá`,
    insights,
    opcoes: ["Pagar agora", "Agendar", "Ver cortes", "Copiar boleto/Pix"],
  });
});

app.listen(PORT, () => {
  console.log(`Servidor rodando em http://localhost:${PORT}`);
});
